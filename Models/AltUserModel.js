const { Sequelize } = require("sequelize");

const AltUserModel = (db) => db.define('User', {
    user_id: { type: Sequelize.INTEGER, primaryKey: true, autoIncrement: true, },
    is_bot: { type: Sequelize.BOOLEAN, allowNull: false, },
    is_supporter: { type: Sequelize.BOOLEAN, allowNull: false, },
    pm_friends_only: { type: Sequelize.BOOLEAN, allowNull: false, },
    username: { type: Sequelize.STRING, allowNull: false, },
    discord: { type: Sequelize.STRING, allowNull: true, },
    has_supported: { type: Sequelize.BOOLEAN, allowNull: false, },
    interests: { type: Sequelize.JSON, allowNull: true, },
    join_date: { type: Sequelize.DATE, allowNull: false, },
    total_kudosu: { type: Sequelize.INTEGER, allowNull: false, },
    available_kudosu: { type: Sequelize.INTEGER, allowNull: false, },
    location: { type: Sequelize.STRING, allowNull: true, },
    occupation: { type: Sequelize.STRING, allowNull: true, },
    post_count: { type: Sequelize.INTEGER, allowNull: false, },
    title: { type: Sequelize.STRING, allowNull: true, },
    twitter: { type: Sequelize.STRING, allowNull: true, },
    website: { type: Sequelize.STRING, allowNull: true, },
    country_code: { type: Sequelize.STRING, allowNull: true, },
    country_name: { type: Sequelize.STRING, allowNull: true, },
    active_tournament_banner: { type: Sequelize.STRING, allowNull: true, },
    beatmap_playcounts_count: { type: Sequelize.INTEGER, allowNull: false, },
    comments_count: { type: Sequelize.INTEGER, allowNull: false, },
    favourite_beatmapset_count: { type: Sequelize.INTEGER, allowNull: false, },
    follower_count: { type: Sequelize.INTEGER, allowNull: false, },
    graveyard_beatmapset_count: { type: Sequelize.INTEGER, allowNull: false, },
    mapping_follower_count: { type: Sequelize.INTEGER, allowNull: false, },
    pending_beatmapset_count: { type: Sequelize.INTEGER, allowNull: false, },
    ranked_beatmapset_count: { type: Sequelize.INTEGER, allowNull: false, },
    scores_first_count: { type: Sequelize.INTEGER, allowNull: false, },
    level: { type: Sequelize.FLOAT, allowNull: false, },
    global_rank: { type: Sequelize.INTEGER, allowNull: false, },
    pp: { type: Sequelize.FLOAT, allowNull: false, },
    ranked_score: { type: Sequelize.BIGINT, allowNull: false, },
    hit_accuracy: { type: Sequelize.FLOAT, allowNull: false, },
    playcount: { type: Sequelize.INTEGER, allowNull: false, },
    playtime: { type: Sequelize.INTEGER, allowNull: false, },
    total_score: { type: Sequelize.BIGINT, allowNull: false, },
    total_hits: { type: Sequelize.INTEGER, allowNull: false, },
    maximum_combo: { type: Sequelize.INTEGER, allowNull: false, },
    replays_watched: { type: Sequelize.INTEGER, allowNull: false, },
    is_ranked: { type: Sequelize.BOOLEAN, allowNull: false, },
    ss_count: { type: Sequelize.INTEGER, allowNull: false, },
    ssh_count: { type: Sequelize.INTEGER, allowNull: false, },
    s_count: { type: Sequelize.INTEGER, allowNull: false, },
    sh_count: { type: Sequelize.INTEGER, allowNull: false, },
    a_count: { type: Sequelize.INTEGER, allowNull: false, },
    country_rank: { type: Sequelize.INTEGER, allowNull: false, },
    support_level: { type: Sequelize.INTEGER, allowNull: false, },
}, {
    tableName: 'users2',
    timestamps: false,
});
module.exports.AltUserModel = AltUserModel;