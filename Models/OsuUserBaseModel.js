const { Sequelize } = require("sequelize");

const OsuUserBaseModel = (db) => db.define('OsuUserBase', {
    id: { type: Sequelize.INTEGER, primaryKey: true },
    is_active: { type: Sequelize.BOOLEAN, allowNull: true },
    is_bot: { type: Sequelize.BOOLEAN, allowNull: true },
    is_deleted: { type: Sequelize.BOOLEAN, allowNull: true },
    is_online: { type: Sequelize.BOOLEAN, allowNull: true },
    is_supporter: { type: Sequelize.BOOLEAN, allowNull: true },
    pm_friends_only: { type: Sequelize.BOOLEAN, allowNull: true },
    username: { type: Sequelize.STRING, allowNull: true },
    country_code: { type: Sequelize.STRING, allowNull: true },
    country_name: { type: Sequelize.STRING, allowNull: true },
    profile_colour: { type: Sequelize.STRING, allowNull: true },
    default_group: { type: Sequelize.STRING, allowNull: true },
    kudosu_available: { type: Sequelize.INTEGER, allowNull: true },
    kudosu_total: { type: Sequelize.INTEGER, allowNull: true },
    join_date: { type: Sequelize.DATE, allowNull: true },
    last_visit: { type: Sequelize.DATE, allowNull: true },
    avatar_url: { type: Sequelize.STRING, allowNull: true },
    cover_custom_url: { type: Sequelize.STRING, allowNull: true },
    cover_url: { type: Sequelize.STRING, allowNull: true },
    cover_id: { type: Sequelize.INTEGER, allowNull: true },
    team_id: { type: Sequelize.INTEGER, allowNull: true },
    ranked_and_approved_beatmapset_count: { type: Sequelize.INTEGER, allowNull: true },
    unranked_beatmapset_count: { type: Sequelize.INTEGER, allowNull: true },
    follower_count: { type: Sequelize.INTEGER, allowNull: true },
    mapping_follower_count: { type: Sequelize.INTEGER, allowNull: true },
    favourite_beatmapset_count: { type: Sequelize.INTEGER, allowNull: true },
    graveyard_beatmapset_count: { type: Sequelize.INTEGER, allowNull: true },
    guest_beatmapset_count: { type: Sequelize.INTEGER, allowNull: true },
    loved_beatmapset_count: { type: Sequelize.INTEGER, allowNull: true },
    comments_count: { type: Sequelize.INTEGER, allowNull: true },
    beatmap_playcounts_count: { type: Sequelize.INTEGER, allowNull: true },
    nominated_beatmapset_count: { type: Sequelize.INTEGER, allowNull: true },
    pending_beatmapset_count: { type: Sequelize.INTEGER, allowNull: true },
    post_count: { type: Sequelize.INTEGER, allowNull: true },
    support_level: { type: Sequelize.INTEGER, allowNull: true },
    last_updated: { type: Sequelize.DATE, allowNull: true },
    daily_challenge_streak_best: { type: Sequelize.INTEGER, allowNull: true },
    daily_challenge_streak_current: { type: Sequelize.INTEGER, allowNull: true },
    daily_challenge_last_update: { type: Sequelize.DATE, allowNull: true },
    daily_challenge_last_weekly_streak: { type: Sequelize.DATE, allowNull: true },
    daily_challenge_playcount: { type: Sequelize.INTEGER, allowNull: true },
    daily_challenge_top_10p_placements: { type: Sequelize.INTEGER, allowNull: true },
    daily_challenge_top_50p_placements: { type: Sequelize.INTEGER, allowNull: true },
    daily_challenge_weekly_streak_best: { type: Sequelize.INTEGER, allowNull: true },
    daily_challenge_weekly_streak_current: { type: Sequelize.INTEGER, allowNull: true },
    achievements: { type: Sequelize.INTEGER, allowNull: true },
    badges: { type: Sequelize.INTEGER, allowNull: true },
}, {
    tableName: 'osu_users_base',
    timestamps: false
});
module.exports.OsuUserBaseModel = OsuUserBaseModel;